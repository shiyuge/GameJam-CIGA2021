//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Singleton_AssetManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Singleton<AssetManager>), typeof(System.Object), "Singleton_AssetManager");
		L.RegFunction("DestoryInstance", DestoryInstance);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestoryInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Singleton<AssetManager>.DestoryInstance();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Singleton<AssetManager>.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

